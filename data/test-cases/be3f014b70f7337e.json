{"uid":"be3f014b70f7337e","name":"Test Equipment Wise SAL when Same API to Same API Limits is OFF","fullName":"tests.scenarios.test_limit_equipments.TestLimitsOnEquipments#test_validate_formulation_equipment_equipmentwise_same_api_sal_all_criteria","historyId":"7c8d6fc1608c9eff3029d322896113b9","time":{"start":1690873494265,"stop":1690873494443,"duration":178},"description":"This test case tests Equipment wise SAL when All Criteria and Same API to Same API Limits is OFF in Policy is selected for all production mapped to Equipment","descriptionHtml":"<p>This test case tests Equipment wise SAL when All Criteria and Same API to Same API Limits is OFF in Policy is selected for all production mapped to Equipment</p>\n","status":"failed","statusMessage":"AssertionError: 419","statusTrace":"self = <test_limit_equipments.TestLimitsOnEquipments object at 0x000002272D4A9010>, login = None\n\n    @allure.title(\"Test Equipment Wise SAL when Same API to Same API Limits is OFF\")\n    @allure.description(\"This test case tests Equipment wise SAL when All Criteria and Same API to Same API Limits is \"\n                        \"OFF in Policy is selected for all production mapped to Equipment\")\n    @allure.link(\"https://app.clickup.com/t/85zrj1u39\")\n    @pytest.mark.formulation\n    @pytest.mark.validate_formulation_equipment_equipmentwise_same_api_sal_all_criteria\n    def test_validate_formulation_equipment_equipmentwise_same_api_sal_all_criteria(self, login):\n        policy_data = {\"useDosage\": True, \"useToxicity\": True, \"useProductLimit\": False, \"useARL\": True,\n                       \"ignoreCombo\": True}\n>       get_policy = json.loads(self.update_active_policy.test_get_active_cleaning_limit_policy())\n\ntests\\scenarios\\test_limit_equipments.py:474: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\unit\\settings\\cleaning_limit_policies\\test_active_cleaning_limit_policy.py:37: in test_get_active_cleaning_limit_policy\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [419]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: 419\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1690873471092,"stop":1690873471469,"duration":377},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"get_facility","time":{"start":1690873471470,"stop":1690873472235,"duration":765},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"load_env","time":{"start":1690873472235,"stop":1690873472237,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"This method will setup cleaning limit policy","time":{"start":1690873481321,"stop":1690873483541,"duration":2220},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_formulation_equipment_equipmentwise_same_api_sal_all_criteria"},{"name":"tag","value":"formulation"},{"name":"tag","value":"equipment_limits"},{"name":"tag","value":"limits"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_limit_equipments"},{"name":"subSuite","value":"TestLimitsOnEquipments"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"8620-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_limit_equipments"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zrj1u39","url":"https://app.clickup.com/t/85zrj1u39","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["equipment_limits","formulation","validate_formulation_equipment_equipmentwise_same_api_sal_all_criteria","limits"]},"source":"be3f014b70f7337e.json","parameterValues":[]}